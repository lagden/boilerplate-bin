#!/bin/bash

DIR="$(cd $(dirname $0) && pwd)"
BIN_DIR="$(cd $DIR/.. && pwd)"

# Import functions
. $BIN_DIR/helper/fn

# Usage
usage() {
	cat <<-EOF

  Usage: $0 [options...]

  Options:
    -e <development|staging|production>  Environment
    -w                                   Watch and reload application
    -b                                   Just build the application
    -h                                   Show usage

EOF
exit 2
}

# Go to current directory
CURR_FOLDER="$(pwd)"
cd $CURR_FOLDER

unset WATCH
WATCH=false

unset BUILD
BUILD=false

unset OPT
OPT="development"

unset OPT_AVAILABLE
OPT_AVAILABLE=("development" "staging" "production")

while getopts "wbhe:" o
do
	case ${o} in
		e) OPT=$OPTARG ;;
		w) WATCH=true ;;
		b) BUILD=true ;;
		h) usage ;;
		\?) usage ;;
	esac
done

# Check option available
[[ ! " ${OPT_AVAILABLE[*]} " =~ " ${OPT} " ]] && usage

# ENV File
load_env $OPT

# Generate ENVs for frontend application
if test "${REQUIRE_GEN:-0}" = "1"; then
	gen_env "${CURR_FOLDER}/resource/env.js"
fi

# Just build
if $BUILD; then
	ok "Building cmd: ${BUILD_LOCAL_CMD}"
	$BUILD_LOCAL_CMD
	if test $? -ne 0; then
		abort "Build failed"
	fi
	exit 0
fi

if $WATCH; then
	ok "Running cmd: ${WATCH_LOCAL_CMD}"

	# Watch command
	eval ${WATCH_LOCAL_CMD}

	if test $? -ne 0; then
		abort "Watch failed"
	fi
else
	eval ${START_CMD}
fi

exit 0
